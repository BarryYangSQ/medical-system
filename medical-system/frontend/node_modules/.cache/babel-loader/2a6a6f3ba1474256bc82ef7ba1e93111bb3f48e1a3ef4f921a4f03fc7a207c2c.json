{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaffScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport { listStaffDetails } from '../actions/staffAction';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StaffScreen = () => {\n  _s();\n  var _availableTimes$find;\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const staffDetails = useSelector(state => state.staffDetails);\n  const {\n    loading,\n    error,\n    staff\n  } = staffDetails;\n  useEffect(() => {\n    if (!staff || staff._id !== id) {\n      // Ensure that staff details are loaded if not already or if staff ID changes\n      dispatch(listStaffDetails(id));\n    }\n  }, [dispatch, id, staff === null || staff === void 0 ? void 0 : staff._id]);\n  useEffect(() => {\n    if (staff && staff.availableTimes) {\n      setAvailableTimes(staff.availableTimes.map(time => ({\n        date: time.date.slice(0, 10),\n        slots: time.slots\n      })));\n    }\n  }, [staff]);\n  const addToAppointmentHandler = () => {\n    navigate(`/preappointment/${id}?date=${encodeURIComponent(selectedDate)}&slot=${encodeURIComponent(selectedSlot)}`);\n  };\n  const selectDate = date => {\n    setSelectedDate(date);\n    setSelectedSlot('');\n  };\n  const selectSlot = slot => {\n    setSelectedSlot(slot);\n  };\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    setSelectedSlot('');\n  };\n  const availableSlots = ((_availableTimes$find = availableTimes.find(time => time.date === selectedDate)) === null || _availableTimes$find === void 0 ? void 0 : _availableTimes$find.slots) || [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go Back to Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 39\n    }, this) : staff ?\n    /*#__PURE__*/\n    // Ensure staff is loaded\n    _jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: staff === null || staff === void 0 ? void 0 : staff.image,\n          alt: staff === null || staff === void 0 ? void 0 : staff.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), \"  // Use optional chaining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: staff === null || staff === void 0 ? void 0 : staff.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: (staff === null || staff === void 0 ? void 0 : staff.rating) && /*#__PURE__*/_jsxDEV(Rating, {\n              value: staff.rating,\n              text: `${staff.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: staff === null || staff === void 0 ? void 0 : staff.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: staff === null || staff === void 0 ? void 0 : staff.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: staff === null || staff === void 0 ? void 0 : staff.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"Staff details not available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(StaffScreen, \"5NxUyRrj4YdV9Pftho53tmoL1jQ=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector];\n});\n_c = StaffScreen;\nexport default StaffScreen;\nvar _c;\n$RefreshReg$(_c, \"StaffScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Card","Button","listStaffDetails","Rating","Loader","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","StaffScreen","_s","_availableTimes$find","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","navigate","dispatch","id","staffDetails","state","loading","error","staff","_id","map","time","date","slice","slots","addToAppointmentHandler","encodeURIComponent","selectDate","selectSlot","slot","handleDateChange","e","newDate","target","value","availableSlots","find","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","src","image","alt","name","fluid","Item","rating","text","numReviews","position","department","description","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport { listStaffDetails } from '../actions/staffAction'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst StaffScreen = () => {\r\n  const [availableTimes, setAvailableTimes] = useState([])\r\n  const [selectedDate, setSelectedDate] = useState('')\r\n  const [selectedSlot, setSelectedSlot] = useState('')\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const staffDetails = useSelector((state) => state.staffDetails)\r\n  const { loading, error, staff } = staffDetails\r\n\r\n  useEffect(() => {\r\n    if (!staff || staff._id !== id) {  // Ensure that staff details are loaded if not already or if staff ID changes\r\n      dispatch(listStaffDetails(id))\r\n    }\r\n  }, [dispatch, id, staff?._id])\r\n\r\n  useEffect(() => {\r\n    if (staff && staff.availableTimes) {\r\n      setAvailableTimes(staff.availableTimes.map(time => ({\r\n        date: time.date.slice(0, 10),\r\n        slots: time.slots,\r\n      })))\r\n    }\r\n  }, [staff])\r\n\r\n  const addToAppointmentHandler = () => {\r\n    navigate(`/preappointment/${id}?date=${encodeURIComponent(selectedDate)}&slot=${encodeURIComponent(selectedSlot)}`)\r\n  }\r\n\r\n  const selectDate = (date) => {\r\n    setSelectedDate(date)\r\n    setSelectedSlot('')\r\n  }\r\n\r\n  const selectSlot = (slot) => {\r\n    setSelectedSlot(slot)\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    const newDate = e.target.value\r\n    setSelectedDate(newDate)\r\n    setSelectedSlot('')\r\n  }\r\n\r\n  const availableSlots = availableTimes.find(time => time.date === selectedDate)?.slots || []\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-dark my-3' to='/'>Go Back to Homepage</Link>\r\n      {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        staff ? (  // Ensure staff is loaded\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={staff?.image} alt={staff?.name} fluid />  // Use optional chaining\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{staff?.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  {staff?.rating && (\r\n                    <Rating value={staff.rating} text={`${staff.numReviews} reviews`} />\r\n                  )}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item><h4>{staff?.position}</h4></ListGroup.Item>\r\n                <ListGroup.Item><h4>{staff?.department}</h4></ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row><h5>{staff?.description}</h5></Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            {/* More code here */}\r\n          </Row>\r\n        ) : <Message variant='info'>Staff details not available.</Message>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StaffScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}