{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import{getUserDetails,updateUserDetails}from'../actions/userAction';import{USER_UPDATE_PROFILE_RESET}from'../contents/userContents';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfileScreen=()=>{const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState(null);const dispatch=useDispatch();const navigate=useNavigate();const location=useLocation();const userDetails=useSelector(state=>state.userDetails);const{loading,error,user}=userDetails;const userLogin=useSelector(state=>state.userLogin);const{userInfo}=userLogin;const userUpdateProfile=useSelector(state=>state.userUpdateProfile);const{success}=userUpdateProfile;useEffect(()=>{if(!userInfo){navigate('/login');}else{if(!user||!user.name||success){// 检查 user 是否已定义，以及 user.name 是否存在\n//显示更改之后的用户数据\ndispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(getUserDetails('profile'));}else{setName(user.name);setEmail(user.email);}}},[dispatch,navigate,userInfo,user]);//表单提交函数(更新用户资料)\nconst submitHandler=e=>{e.preventDefault();//dispatch update profile函数\ndispatch(updateUserDetails({id:user._id,name,email,password}));};return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile\"}),success&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"success\\uFF01\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\\uFF1A\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Please enter your name\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"E-mail\\uFF1A\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Please enter your e-mail address\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\\uFF1A\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"please enter your password\",value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"confirm your password\\uFF1A\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"confirm your password\\uFF1A\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})});};export default ProfileScreen;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserDetails","USER_UPDATE_PROFILE_RESET","jsx","_jsx","jsxs","_jsxs","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","navigate","location","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","type","submitHandler","e","preventDefault","id","_id","children","md","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserDetails } from '../actions/userAction'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../contents/userContents'\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user, } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      if (!user || !user.name || success) { // 检查 user 是否已定义，以及 user.name 是否存在\r\n        //显示更改之后的用户数据\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, user])\r\n  //表单提交函数(更新用户资料)\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    //dispatch update profile函数\r\n    dispatch(updateUserDetails({ id: user._id, name, email, password }))\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Profile</h2>\r\n        {success && <Message variant='success'>success！</Message>}\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name：</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Please enter your name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>E-mail：</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Please enter your e-mail address'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password：</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='please enter your password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>confirm your password：</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='confirm your password：'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}