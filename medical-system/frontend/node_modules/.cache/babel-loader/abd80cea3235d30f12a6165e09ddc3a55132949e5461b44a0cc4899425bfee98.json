{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaffMedical.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return 'No Date'; // 处理空或未定义的输入\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) return 'Invalid Date'; // 检查日期是否有效\n  return date.toISOString().substring(0, 10); // YYYY-MM-DD format\n};\nconst StaffMedical = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const medicalHistoryState = useSelector(state => state.staffMedical);\n  const {\n    medicalHistories,\n    loading,\n    error\n  } = medicalHistoryState;\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchHistory(id));\n    }\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column align-items-center\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"w-100\",\n      children: medicalHistories.map(history => /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3 w-100\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Medical ID: \", history._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"User: \", history.user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Birth Day: \", history.user.dateOfBirth ? formatDate(history.user.dateOfBirth) : 'No Date Available']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Staff: \", history.staff.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Email: \", history.staff.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Test: \", history.test]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Medical Prescription: \", history.medicalPrescription]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Diagnostic Result: \", history.diagnosticResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Date: \", history.date ? formatDate(history.date) : 'No Date Available']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, history._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(StaffMedical, \"CGVYwhRd38VVMAKzqo6cnSYAh1I=\", true);\n_c = StaffMedical;\nexport default StaffMedical;\nvar _c;\n$RefreshReg$(_c, \"StaffMedical\");","map":{"version":3,"names":["formatDate","dateString","date","Date","isNaN","getTime","toISOString","substring","StaffMedical","_s","id","useParams","dispatch","useDispatch","medicalHistoryState","useSelector","state","staffMedical","medicalHistories","loading","error","useEffect","fetchHistory","_jsxDEV","Container","className","children","Loader","fileName","_jsxFileName","lineNumber","columnNumber","Message","variant","Row","map","history","Col","md","Card","ListGroup","Item","_id","user","name","dateOfBirth","staff","email","test","medicalPrescription","diagnosticResult","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffMedical.js"],"sourcesContent":["const formatDate = (dateString) => {\r\n  if (!dateString) return 'No Date' // 处理空或未定义的输入\r\n  const date = new Date(dateString)\r\n  if (isNaN(date.getTime())) return 'Invalid Date' // 检查日期是否有效\r\n  return date.toISOString().substring(0, 10) // YYYY-MM-DD format\r\n}\r\n\r\nconst StaffMedical = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const medicalHistoryState = useSelector(state => state.staffMedical)\r\n  const { medicalHistories, loading, error } = medicalHistoryState\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchHistory(id))\r\n    }\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column align-items-center\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className=\"w-100\">\r\n          {medicalHistories.map(history => (\r\n            <Col md={12} key={history._id} className=\"d-flex justify-content-center\">\r\n              <Card className=\"mb-3 w-100\">\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h3>Medical ID: {history._id}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>User: {history.user.name}</h4>\r\n                    <h5>Birth Day: {history.user.dateOfBirth ? formatDate(history.user.dateOfBirth) : 'No Date Available'}</h5>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Staff: {history.staff.name}</h4>\r\n                    <h5>Email: {history.staff.email}</h5>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Test: {history.test}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Medical Prescription: {history.medicalPrescription}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Diagnostic Result: {history.diagnosticResult}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Date: {history.date ? formatDate(history.date) : 'No Date Available'}</h4>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StaffMedical\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}