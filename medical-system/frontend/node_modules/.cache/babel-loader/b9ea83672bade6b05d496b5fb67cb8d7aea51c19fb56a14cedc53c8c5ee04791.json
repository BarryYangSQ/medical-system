{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaffMedical.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { fetchHistory } from '../actions/staffAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return 'No Date'; // 处理空或未定义的输入\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) return 'Invalid Date'; // 检查日期是否有效\n  return date.toISOString().substring(0, 10); // YYYY-MM-DD format\n};\nconst StaffMedical = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const medicalHistoryState = useSelector(state => state.staffMedical);\n  const {\n    medicalHistories,\n    loading,\n    error\n  } = medicalHistoryState;\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchHistory(id));\n    }\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column align-items-center\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"w-100\",\n      children: medicalHistories.map(history => /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3 w-100\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Medical ID: \", history._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"User: \", history.user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Birth Day: \", history.user.dateOfBirth ? formatDate(history.user.dateOfBirth) : 'No Date Available']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Staff: \", history.staff.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Email: \", history.staff.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Test: \", history.test]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Medical Prescription: \", history.medicalPrescription]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Diagnostic Result: \", history.diagnosticResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Date: \", history.date ? formatDate(history.date) : 'No Date Available']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, history._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StaffMedical, \"CGVYwhRd38VVMAKzqo6cnSYAh1I=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = StaffMedical;\nexport default StaffMedical;\nvar _c;\n$RefreshReg$(_c, \"StaffMedical\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","Container","Row","Col","ListGroup","Card","Loader","Message","fetchHistory","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","isNaN","getTime","toISOString","substring","StaffMedical","_s","id","dispatch","medicalHistoryState","state","staffMedical","medicalHistories","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","history","md","Item","_id","user","name","dateOfBirth","staff","email","test","medicalPrescription","diagnosticResult","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffMedical.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { fetchHistory } from '../actions/staffAction'\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'No Date' // 处理空或未定义的输入\r\n  const date = new Date(dateString)\r\n  if (isNaN(date.getTime())) return 'Invalid Date' // 检查日期是否有效\r\n  return date.toISOString().substring(0, 10) // YYYY-MM-DD format\r\n}\r\n\r\nconst StaffMedical = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const medicalHistoryState = useSelector(state => state.staffMedical)\r\n  const { medicalHistories, loading, error } = medicalHistoryState\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchHistory(id))\r\n    }\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column align-items-center\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className=\"w-100\">\r\n          {medicalHistories.map(history => (\r\n            <Col md={12} key={history._id} className=\"d-flex justify-content-center\">\r\n              <Card className=\"mb-3 w-100\">\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h3>Medical ID: {history._id}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>User: {history.user.name}</h4>\r\n                    <h5>Birth Day: {history.user.dateOfBirth ? formatDate(history.user.dateOfBirth) : 'No Date Available'}</h5>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Staff: {history.staff.name}</h4>\r\n                    <h5>Email: {history.staff.email}</h5>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Test: {history.test}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Medical Prescription: {history.medicalPrescription}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Diagnostic Result: {history.diagnosticResult}</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Date: {history.date ? formatDate(history.date) : 'No Date Available'}</h4>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StaffMedical\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}