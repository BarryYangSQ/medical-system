{"ast":null,"code":"// import React, { useEffect } from 'react'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import { Table, Button } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { useNavigate } from 'react-router-dom'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n// import { listUsers, deleteUser } from '../actions/userActions'\n\n// const UserListScreen = ({ history }) => {\n//   const dispatch = useDispatch()\n//   const navigate = useNavigate()\n//   const userList = useSelector((state) => state.userList)\n//   const { loading, error, users } = userList\n//   const userLogin = useSelector((state) => state.userLogin)\n//   const { userInfo } = userLogin\n//   const userDelete = useSelector((state) => state.userDelete)\n//   const { success: successDelete, message } = userDelete\n\n//   useEffect(() => {\n//     if (userInfo && userInfo.isAdmin) {\n//       dispatch(listUsers())\n//     } else {\n//       navigate('/login')\n//     }\n\n//   }, [dispatch, userInfo, successDelete])\n\n//   return (\n//     <>\n//       <h1>用户列表</h1>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant='danger'>{error}</Message>\n//       ) : (\n//         <Table striped bordered hover responsive className='table-sm'>\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>姓名</th>\n//               <th>邮箱</th>\n//               <th>管理员</th>\n//               <th></th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {users.map((user) => (\n//               <tr key={user._id}>\n//                 <td>{user._id}</td>\n//                 <td>{user.name}</td>\n//                 <td>{user.email}</td>\n//                 <td>\n//                   {user.isAdmin ? (\n//                     <i className='fas fa-check' style={{ color: 'green' }}></i>\n//                   ) : (\n//                     <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                   )}\n//                 </td>\n//                 <td>\n//                   <LinkContainer to={`/admin/user/${user._id}/edit`}>\n//                     <Button variant='light' className='btn-sm'>\n//                       <i className='fas fa-edit'></i>\n//                     </Button>\n//                   </LinkContainer>\n//                   <Button\n//                     variant='danger'\n//                     className='btn-sm'\n//                     onClick={() => deleteHandler(user._id)}\n//                   >\n//                     <i className='fas fa-trash'></i>\n//                   </Button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </Table>\n//       )}\n//     </>\n//   )\n// }\n\n// export default UserListScreen","map":{"version":3,"names":[],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaOrderListScreen.js"],"sourcesContent":["// import React, { useEffect } from 'react'\r\n// import { LinkContainer } from 'react-router-bootstrap'\r\n// import { Table, Button } from 'react-bootstrap'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import Message from '../components/Message'\r\n// import Loader from '../components/Loader'\r\n// import { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n// const UserListScreen = ({ history }) => {\r\n//   const dispatch = useDispatch()\r\n//   const navigate = useNavigate()\r\n//   const userList = useSelector((state) => state.userList)\r\n//   const { loading, error, users } = userList\r\n//   const userLogin = useSelector((state) => state.userLogin)\r\n//   const { userInfo } = userLogin\r\n//   const userDelete = useSelector((state) => state.userDelete)\r\n//   const { success: successDelete, message } = userDelete\r\n\r\n//   useEffect(() => {\r\n//     if (userInfo && userInfo.isAdmin) {\r\n//       dispatch(listUsers())\r\n//     } else {\r\n//       navigate('/login')\r\n//     }\r\n\r\n\r\n//   }, [dispatch, userInfo, successDelete])\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <h1>用户列表</h1>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant='danger'>{error}</Message>\r\n//       ) : (\r\n//         <Table striped bordered hover responsive className='table-sm'>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>姓名</th>\r\n//               <th>邮箱</th>\r\n//               <th>管理员</th>\r\n//               <th></th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {users.map((user) => (\r\n//               <tr key={user._id}>\r\n//                 <td>{user._id}</td>\r\n//                 <td>{user.name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>\r\n//                   {user.isAdmin ? (\r\n//                     <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n//                   ) : (\r\n//                     <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n//                     <Button variant='light' className='btn-sm'>\r\n//                       <i className='fas fa-edit'></i>\r\n//                     </Button>\r\n//                   </LinkContainer>\r\n//                   <Button\r\n//                     variant='danger'\r\n//                     className='btn-sm'\r\n//                     onClick={() => deleteHandler(user._id)}\r\n//                   >\r\n//                     <i className='fas fa-trash'></i>\r\n//                   </Button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </Table>\r\n//       )}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default UserListScreen"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}