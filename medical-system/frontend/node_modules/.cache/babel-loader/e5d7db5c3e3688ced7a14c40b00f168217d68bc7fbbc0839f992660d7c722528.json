{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\mobile-shop\\\\frontend\\\\src\\\\components\\\\DataFetchComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetchComponent = () => {\n  _s();\n  var _data$result;\n  const [data, setData] = useState({\n    records: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios({\n          url: 'https://opendata.nhsbsa.net/api/3/action/datastore_search',\n          method: 'get',\n          params: {\n            resource_id: 'DISP_NAMEADDRESS_202403',\n            // 替换成你的资源ID\n            limit: 5,\n            q: '{\"TOTAL_QUANTITY\":\"40:*\"}' // 你的查询条件\n          }\n        });\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      }\n    };\n    fetchData();\n  }, []); // 空数组意味着这个effect只会在组件挂载后运行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_data$result = data.result) === null || _data$result === void 0 ? void 0 : _data$result.records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [record.field1, \" - \", record.field2]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetchComponent, \"VpMbLI6NZQGo3ZVfVar/XvzlhnQ=\");\n_c = DataFetchComponent;\nexport default DataFetchComponent;\nvar _c;\n$RefreshReg$(_c, \"DataFetchComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DataFetchComponent","_s","_data$result","data","setData","records","fetchData","response","url","method","params","resource_id","limit","q","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","result","map","record","index","field1","field2","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/mobile-shop/frontend/src/components/DataFetchComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst DataFetchComponent = () => {\r\n  const [data, setData] = useState({ records: [] })\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios({\r\n          url: 'https://opendata.nhsbsa.net/api/3/action/datastore_search',\r\n          method: 'get',\r\n          params: {\r\n            resource_id: 'DISP_NAMEADDRESS_202403', // 替换成你的资源ID\r\n            limit: 5,\r\n            q: '{\"TOTAL_QUANTITY\":\"40:*\"}' // 你的查询条件\r\n          }\r\n        })\r\n\r\n        setData(response.data)\r\n      } catch (error) {\r\n        console.error('Error fetching data: ', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, []) // 空数组意味着这个effect只会在组件挂载后运行一次\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Records</h1>\r\n      <ul>\r\n        {data.result?.records.map((record, index) => (\r\n          <li key={index}>\r\n            {/* 替换field1和field2为API返回的实际数据字段 */}\r\n            {record.field1} - {record.field2}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataFetchComponent\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,OAAO,EAAE;EAAG,CAAC,CAAC;EAEjDT,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC;UAC3BW,GAAG,EAAE,2DAA2D;UAChEC,MAAM,EAAE,KAAK;UACbC,MAAM,EAAE;YACNC,WAAW,EAAE,yBAAyB;YAAE;YACxCC,KAAK,EAAE,CAAC;YACRC,CAAC,EAAE,2BAA2B,CAAC;UACjC;QACF,CAAC,CAAC;QAEFT,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEP,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAAiB,QAAA,GAAAd,YAAA,GACGC,IAAI,CAACkB,MAAM,cAAAnB,YAAA,uBAAXA,YAAA,CAAaG,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtCzB,OAAA;QAAAiB,QAAA,GAEGO,MAAM,CAACE,MAAM,EAAC,KAAG,EAACF,MAAM,CAACG,MAAM;MAAA,GAFzBF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAtCKD,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}