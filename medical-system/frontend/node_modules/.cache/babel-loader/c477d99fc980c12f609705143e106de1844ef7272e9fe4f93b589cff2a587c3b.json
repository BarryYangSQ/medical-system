{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\mobile-shop\\\\frontend\\\\src\\\\components\\\\Product.js\";\n// import React from 'react'\n// import { Card } from 'react-bootstrap'\n// import Rating from './Rating'\n// import { Link } from 'react-router-dom'\n// /** 用于展示不同产品的信息\n//  * 此时的Prodcut组件是 Homescreen的子组件\n// */\n\n// const Product = ({ product }) => {\n//   return (\n//     <Card className='my-3 p-3 rounded'>\n//       <Link to={`/products/${product._id}`}>\n//         {/* 设置图片为固定高度，object-fit 保持图片比例 */}\n//         <Card.Img\n//           src={product.image}\n//           variant='top'\n//           style={{\n//             height: '180px',\n//             width: '100%', // 确保图片宽度总是占满容器\n//             objectFit: 'contain', // 保证图片按比例缩放\n//             objectPosition: 'center' // 居中图片，对于宽高比不是完美匹配的情况\n//           }}\n//         />\n//       </Link>\n\n//       <Card.Body className=\"d-flex flex-column\">  {/* 使用flex-column使内容在垂直方向排列 */}\n\n//         <Link to={`/products/${product._id}`} style={{ textDecoration: 'none' }}>\n//           {/* 设置标题为固定高度 */}\n//           <Card.Title style={{ height: '4rem', overflow: 'hidden' }}>\n//             {product.name}\n//           </Card.Title>\n//         </Link>\n\n//         <Card.Text as='div' className=\"flex-grow-1\"> {/* 使用flex-grow-1让评分部分填充可用空间 */}\n//           <Rating value={product.rating} text={`${product.numReviews}条评论`} />\n//         </Card.Text>\n\n//         {/* 保持价格始终在底部 */}\n//         <Card.Text as='h3' className=\"mt-auto\">\n//           ${product.price}\n//         </Card.Text>\n\n//       </Card.Body>\n//     </Card>\n//   )\n// }\n\n// export default Product\n\nimport React from 'react';\nimport { Card, CardDeck, Button } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\n/** 用于展示不同产品的信息\r\n * 此时的Prodcut组件是 Homescreen的子组件\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = ({\n  product\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"my-3 py-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${product._id}`,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        src: product.image,\n        variant: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/products/${product._id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        as: \"div\",\n        children: /*#__PURE__*/_jsxDEV(Rating, {\n          value: product.rating,\n          text: `${product.numReviews}条评论`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        as: \"h3\",\n        children: [\"$\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","Card","CardDeck","Button","Rating","Link","jsxDEV","_jsxDEV","Product","product","className","children","to","_id","Img","src","image","variant","fileName","_jsxFileName","lineNumber","columnNumber","Body","style","textDecoration","Title","name","Text","as","value","rating","text","numReviews","price","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/mobile-shop/frontend/src/components/Product.js"],"sourcesContent":["// import React from 'react'\r\n// import { Card } from 'react-bootstrap'\r\n// import Rating from './Rating'\r\n// import { Link } from 'react-router-dom'\r\n// /** 用于展示不同产品的信息\r\n//  * 此时的Prodcut组件是 Homescreen的子组件\r\n// */\r\n\r\n// const Product = ({ product }) => {\r\n//   return (\r\n//     <Card className='my-3 p-3 rounded'>\r\n//       <Link to={`/products/${product._id}`}>\r\n//         {/* 设置图片为固定高度，object-fit 保持图片比例 */}\r\n//         <Card.Img\r\n//           src={product.image}\r\n//           variant='top'\r\n//           style={{\r\n//             height: '180px',\r\n//             width: '100%', // 确保图片宽度总是占满容器\r\n//             objectFit: 'contain', // 保证图片按比例缩放\r\n//             objectPosition: 'center' // 居中图片，对于宽高比不是完美匹配的情况\r\n//           }}\r\n//         />\r\n//       </Link>\r\n\r\n//       <Card.Body className=\"d-flex flex-column\">  {/* 使用flex-column使内容在垂直方向排列 */}\r\n\r\n//         <Link to={`/products/${product._id}`} style={{ textDecoration: 'none' }}>\r\n//           {/* 设置标题为固定高度 */}\r\n//           <Card.Title style={{ height: '4rem', overflow: 'hidden' }}>\r\n//             {product.name}\r\n//           </Card.Title>\r\n//         </Link>\r\n\r\n//         <Card.Text as='div' className=\"flex-grow-1\"> {/* 使用flex-grow-1让评分部分填充可用空间 */}\r\n//           <Rating value={product.rating} text={`${product.numReviews}条评论`} />\r\n//         </Card.Text>\r\n\r\n//         {/* 保持价格始终在底部 */}\r\n//         <Card.Text as='h3' className=\"mt-auto\">\r\n//           ${product.price}\r\n//         </Card.Text>\r\n\r\n//       </Card.Body>\r\n//     </Card>\r\n//   )\r\n// }\r\n\r\n// export default Product\r\n\r\n\r\nimport React from 'react'\r\nimport { Card, CardDeck, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n/** 用于展示不同产品的信息\r\n * 此时的Prodcut组件是 Homescreen的子组件\r\n*/\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 py-3 rounded'>\r\n      {/* 展示图片 */}\r\n      <Link to={`/products/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top'></Card.Img>\r\n      </Link>\r\n\r\n      <Card.Body>\r\n\r\n        {/* 展示图片名 */}\r\n        <Link to={`/products/${product._id}`} style={{ textDecoration: 'none' }}>\r\n          <Card.Title>{product.name}</Card.Title>\r\n        </Link>\r\n\r\n        {/* 因为其他的地方也需要使用商品评价，所以封装为组件来使用 */}\r\n        <Card.Text as='div'>\r\n          {/* <div className='my-3'>\r\n            {product.rating}是依据{product.numReviews}条评价来计算的\r\n          </div> */}\r\n          <Rating value={product.rating} text={`${product.numReviews}条评论`} />\r\n        </Card.Text>\r\n\r\n\r\n\r\n        {/* 展示商品价格 */}\r\n        <Card.Text as='h3'>\r\n          ${product.price}\r\n        </Card.Text>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,iBAAiB;AACxD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B,oBACEF,OAAA,CAACN,IAAI;IAACS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAEjCJ,OAAA,CAACF,IAAI;MAACO,EAAE,EAAG,aAAYH,OAAO,CAACI,GAAI,EAAE;MAAAF,QAAA,eACnCJ,OAAA,CAACN,IAAI,CAACa,GAAG;QAACC,GAAG,EAAEN,OAAO,CAACO,KAAM;QAACC,OAAO,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEPd,OAAA,CAACN,IAAI,CAACqB,IAAI;MAAAX,QAAA,gBAGRJ,OAAA,CAACF,IAAI;QAACO,EAAE,EAAG,aAAYH,OAAO,CAACI,GAAI,EAAE;QAACU,KAAK,EAAE;UAAEC,cAAc,EAAE;QAAO,CAAE;QAAAb,QAAA,eACtEJ,OAAA,CAACN,IAAI,CAACwB,KAAK;UAAAd,QAAA,EAAEF,OAAO,CAACiB;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAGPd,OAAA,CAACN,IAAI,CAAC0B,IAAI;QAACC,EAAE,EAAC,KAAK;QAAAjB,QAAA,eAIjBJ,OAAA,CAACH,MAAM;UAACyB,KAAK,EAAEpB,OAAO,CAACqB,MAAO;UAACC,IAAI,EAAG,GAAEtB,OAAO,CAACuB,UAAW;QAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eAKZd,OAAA,CAACN,IAAI,CAAC0B,IAAI;QAACC,EAAE,EAAC,IAAI;QAAAjB,QAAA,GAAC,GAChB,EAACF,OAAO,CAACwB,KAAK;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAAAa,EAAA,GAjCK1B,OAAO;AAmCb,eAAeA,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}