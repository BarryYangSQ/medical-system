{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { staffDetailsReducer, staffListReducer } from './reducers/staffReducer';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer } from './reducers/userReducer';\nimport { preAppointmentReducer } from './reducers/preAppointmentReducer';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  staffList: staffListReducer,\n  staffDetails: staffDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  preAppointment: preAppointmentReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\n\n//获取本地存储的预约表的信息\nconst preAppointmentItemsFromStorage = localStorage.getItem('preAppointmentItems') ? JSON.parse(localStorage.getItem('preAppointmentItems')) : [];\n\n//获取本地存储的登录用户信息\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\n//初始化state值\nconst initialState = {\n  preAppointment: {\n    preAppointmentItems: preAppointmentItemsFromStorage,\n    illnessDescription: JSON.parse(localStorage.getItem('illnessDescription')) || ''\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","staffDetailsReducer","staffListReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","preAppointmentReducer","orderCreateReducer","orderDetailsReducer","reducer","staffList","staffDetails","userLogin","userRegister","userDetails","preAppointment","orderCreate","orderDetails","preAppointmentItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","preAppointmentItems","illnessDescription","userInfo","middleware","store"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  staffDetailsReducer,\r\n  staffListReducer\r\n} from './reducers/staffReducer'\r\nimport {\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n} from './reducers/userReducer'\r\nimport { preAppointmentReducer } from './reducers/preAppointmentReducer'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer\r\n} from './reducers/orderReducer'\r\nconst reducer = combineReducers({\r\n  staffList: staffListReducer,\r\n  staffDetails: staffDetailsReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  preAppointment: preAppointmentReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n})\r\n\r\n\r\n\r\n//获取本地存储的预约表的信息\r\nconst preAppointmentItemsFromStorage = localStorage.getItem('preAppointmentItems')\r\n  ? JSON.parse(localStorage.getItem('preAppointmentItems'))\r\n  : []\r\n\r\n//获取本地存储的登录用户信息\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n//初始化state值\r\nconst initialState = {\r\n  preAppointment: {\r\n    preAppointmentItems: preAppointmentItemsFromStorage,\r\n    illnessDescription: JSON.parse(localStorage.getItem('illnessDescription')) || '',\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,mBAAmB,EACnBC,gBAAgB,QACX,yBAAyB;AAChC,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,QACd,wBAAwB;AAC/B,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SACEC,kBAAkB,EAClBC,mBAAmB,QACd,yBAAyB;AAChC,MAAMC,OAAO,GAAGZ,eAAe,CAAC;EAC9Ba,SAAS,EAAER,gBAAgB;EAC3BS,YAAY,EAAEV,mBAAmB;EACjCW,SAAS,EAAER,gBAAgB;EAC3BS,YAAY,EAAER,mBAAmB;EACjCS,WAAW,EAAEX,kBAAkB;EAC/BY,cAAc,EAAET,qBAAqB;EACrCU,WAAW,EAAET,kBAAkB;EAC/BU,YAAY,EAAET;AAChB,CAAC,CAAC;;AAIF;AACA,MAAMU,8BAA8B,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,GAC9EC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC,GACvD,EAAE;;AAEN;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMI,YAAY,GAAG;EACnBT,cAAc,EAAE;IACdU,mBAAmB,EAAEP,8BAA8B;IACnDQ,kBAAkB,EAAEL,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI;EAChF,CAAC;EACDR,SAAS,EAAE;IAAEe,QAAQ,EAAEJ;EAAoB;AAC7C,CAAC;AAID,MAAMK,UAAU,GAAG,CAAC7B,KAAK,CAAC;AAE1B,MAAM8B,KAAK,GAAGjC,WAAW,CACvBa,OAAO,EACPe,YAAY,EACZxB,mBAAmB,CAACF,eAAe,CAAC,GAAG8B,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}