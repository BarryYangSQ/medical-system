{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{useParams}from'react-router-dom';import{Container,Row,Col,ListGroup,Card}from'react-bootstrap';import Loader from'../components/Loader';import Message from'../components/Message';import{fetchHistory}from'../actions/staffAction';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDate=dateString=>{if(!dateString)return'No Date';// Handle empty or undefined input\nconst date=new Date(dateString);if(isNaN(date.getTime()))return'Invalid Date';// Check if the date is valid\nreturn date.toISOString().substring(0,10);// YYYY-MM-DD format\n};const StaffMedical=()=>{const{id}=useParams();const dispatch=useDispatch();const medicalHistoryState=useSelector(state=>state.staffMedical);const{medicalHistories,loading,error}=medicalHistoryState;useEffect(()=>{if(id){dispatch(fetchHistory(id));}},[dispatch,id]);return/*#__PURE__*/_jsx(Container,{className:\"d-flex flex-column align-items-center\",children:loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsx(Row,{className:\"w-100\",children:medicalHistories.map(history=>/*#__PURE__*/_jsx(Col,{md:12,className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-3 w-100 shadow-sm\",children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",style:{backgroundColor:'#f0f0f0',fontWeight:'bold'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Medical ID: \"}),history._id]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"User: \"}),history.user.name,/*#__PURE__*/_jsx(\"h4\",{children:\"E-mail:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"mailto:\".concat(history.user.email),children:history.user.email})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Staff: \",history.staff.name]}),/*#__PURE__*/_jsx(\"h5\",{children:\"Email: \"}),history.staff.email]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Test: \"}),history.test]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Medical Prescription: \"}),history.medicalPrescription]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Diagnostic Result: \"}),history.diagnosticResult]}),/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Date: \"}),history.date?formatDate(history.date):'No Date Available']})]})})},history._id))})});};export default StaffMedical;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","Container","Row","Col","ListGroup","Card","Loader","Message","fetchHistory","jsx","_jsx","jsxs","_jsxs","formatDate","dateString","date","Date","isNaN","getTime","toISOString","substring","StaffMedical","id","dispatch","medicalHistoryState","state","staffMedical","medicalHistories","loading","error","className","children","variant","map","history","md","Item","style","backgroundColor","fontWeight","_id","user","name","href","concat","email","staff","test","medicalPrescription","diagnosticResult"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffMedical.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { fetchHistory } from '../actions/staffAction'\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'No Date' // Handle empty or undefined input\r\n  const date = new Date(dateString)\r\n  if (isNaN(date.getTime())) return 'Invalid Date' // Check if the date is valid\r\n  return date.toISOString().substring(0, 10) // YYYY-MM-DD format\r\n}\r\n\r\nconst StaffMedical = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const medicalHistoryState = useSelector(state => state.staffMedical)\r\n  const { medicalHistories, loading, error } = medicalHistoryState\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchHistory(id))\r\n    }\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column align-items-center\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className=\"w-100\">\r\n          {medicalHistories.map(history => (\r\n            <Col md={12} key={history._id} className=\"d-flex justify-content-center\">\r\n              <Card className=\"mb-3 w-100 shadow-sm\">\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className=\"text-center\" style={{ backgroundColor: '#f0f0f0', fontWeight: 'bold' }}>\r\n                    <h3>Medical ID: </h3>{history._id}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>User: </h4>{history.user.name}\r\n                    <h4>E-mail:</h4> <a href={`mailto:${history.user.email}`}>{history.user.email}</a>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Staff: {history.staff.name}</h4>\r\n                    <h5>Email: </h5>{history.staff.email}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Test: </h4>{history.test}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Medical Prescription: </h4>{history.medicalPrescription}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Diagnostic Result: </h4>{history.diagnosticResult}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Date: </h4>{history.date ? formatDate(history.date) : 'No Date Available'}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StaffMedical\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}