{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaffMedical.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { fetchHistory } from '../actions/staffAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return 'No Date'; // Handle empty or undefined input\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) return 'Invalid Date'; // Check if the date is valid\n  return date.toISOString().substring(0, 10); // YYYY-MM-DD format\n};\nconst StaffMedical = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const medicalHistoryState = useSelector(state => state.staffMedical);\n  const {\n    medicalHistories,\n    loading,\n    error\n  } = medicalHistoryState;\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchHistory(id));\n    }\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column align-items-center\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"w-100\",\n      children: medicalHistories.map(history => /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3 w-100 shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              style: {\n                backgroundColor: '#f0f0f0',\n                fontWeight: 'bold'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Medical ID: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this), history._id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"User: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this), history.user.name, /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"E-mail:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${history.user.email}`,\n                children: history.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Staff: \", history.staff.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Email: \", history.staff.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Test: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), history.test]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Medical Prescription: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), history.medicalPrescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Diagnostic Result: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), history.diagnosticResult]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), history.date ? formatDate(history.date) : 'No Date Available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, history._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StaffMedical, \"CGVYwhRd38VVMAKzqo6cnSYAh1I=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = StaffMedical;\nexport default StaffMedical;\nvar _c;\n$RefreshReg$(_c, \"StaffMedical\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","Container","Row","Col","ListGroup","Card","Loader","Message","fetchHistory","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","isNaN","getTime","toISOString","substring","StaffMedical","_s","id","dispatch","medicalHistoryState","state","staffMedical","medicalHistories","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","history","md","Item","style","backgroundColor","fontWeight","_id","user","name","href","email","staff","test","medicalPrescription","diagnosticResult","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffMedical.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { fetchHistory } from '../actions/staffAction'\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'No Date' // Handle empty or undefined input\r\n  const date = new Date(dateString)\r\n  if (isNaN(date.getTime())) return 'Invalid Date' // Check if the date is valid\r\n  return date.toISOString().substring(0, 10) // YYYY-MM-DD format\r\n}\r\n\r\nconst StaffMedical = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const medicalHistoryState = useSelector(state => state.staffMedical)\r\n  const { medicalHistories, loading, error } = medicalHistoryState\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchHistory(id))\r\n    }\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column align-items-center\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className=\"w-100\">\r\n          {medicalHistories.map(history => (\r\n            <Col md={12} key={history._id} className=\"d-flex justify-content-center\">\r\n              <Card className=\"mb-3 w-100 shadow-sm\">\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className=\"text-center\" style={{ backgroundColor: '#f0f0f0', fontWeight: 'bold' }}>\r\n                    <h3>Medical ID: </h3>{history._id}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>User: </h4>{history.user.name}\r\n                    <h4>E-mail:</h4> <a href={`mailto:${history.user.email}`}>{history.user.email}</a>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Staff: {history.staff.name}</h4>\r\n                    <h5>Email: {history.staff.email}</h5>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Test: </h4>{history.test}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Medical Prescription: </h4>{history.medicalPrescription}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\" >\r\n                    <h4>Diagnostic Result: </h4>{history.diagnosticResult}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h4>Date: </h4>{history.date ? formatDate(history.date) : 'No Date Available'}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StaffMedical\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}