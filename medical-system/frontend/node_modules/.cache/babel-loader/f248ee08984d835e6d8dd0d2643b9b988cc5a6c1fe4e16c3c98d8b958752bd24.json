{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\EditOrderScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Card, ListGroup, Button } from 'react-bootstrap';\nimport { editOrderById, updateOrderStatus } from '../actions/staffAction';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditOrderScreen = () => {\n  _s();\n  const {\n    id: orderId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const editOrder = useSelector(state => state.editOrder); // 确保这个名称与你在 rootReducer 中设置的名称匹配\n  const {\n    loading,\n    error,\n    orderDetial\n  } = editOrder; // 注意这里是 orderDetial\n  const uptatus = useSelector(state => state.orderUpdateStatus);\n  const {\n    success\n  } = uptatus;\n  useEffect(() => {\n    if (orderId) {\n      dispatch(editOrderById(orderId));\n    }\n  }, [dispatch, orderId]);\n  const updateStatus = (itemIndex, newStatus) => {\n    dispatch(updateOrderStatus(orderId, itemIndex, newStatus));\n  };\n  //修改成功后 再次派发 实现更新结果\n  if (success) {\n    dispatch(editOrderById(orderId));\n  }\n  const handleReferral = () => {\n    // Logic for referral\n    console.log('Handle referral');\n    // Implement your referral logic here\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : orderDetial ? /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: orderDetial.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: orderDetial.user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: orderDetial.illnessDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Status: \", orderDetial.orderItems[0].status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => updateStatus(0, 'Completed'),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => updateStatus(0, 'Cancelled'),\n              children: \"Cancelled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: handleReferral,\n              children: \"Refer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"Order not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EditOrderScreen, \"Wj1s6G7FWgiovtUCnNlhhWJFoQ0=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = EditOrderScreen;\nexport default EditOrderScreen;\nvar _c;\n$RefreshReg$(_c, \"EditOrderScreen\");","map":{"version":3,"names":["React","useEffect","useParams","useNavigate","useDispatch","useSelector","Row","Col","Card","ListGroup","Button","editOrderById","updateOrderStatus","Loader","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","EditOrderScreen","_s","id","orderId","navigate","dispatch","editOrder","state","loading","error","orderDetial","uptatus","orderUpdateStatus","success","updateStatus","itemIndex","newStatus","handleReferral","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","Body","Title","user","name","Text","email","illnessDescription","orderItems","status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/EditOrderScreen.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Card, ListGroup, Button } from 'react-bootstrap'\r\nimport { editOrderById, updateOrderStatus } from '../actions/staffAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst EditOrderScreen = () => {\r\n  const { id: orderId } = useParams()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const editOrder = useSelector(state => state.editOrder) // 确保这个名称与你在 rootReducer 中设置的名称匹配\r\n  const { loading, error, orderDetial } = editOrder // 注意这里是 orderDetial\r\n  const uptatus = useSelector(state => state.orderUpdateStatus)\r\n  const { success } = uptatus\r\n  useEffect(() => {\r\n    if (orderId) {\r\n      dispatch(editOrderById(orderId))\r\n    }\r\n  }, [dispatch, orderId])\r\n\r\n\r\n\r\n  const updateStatus = (itemIndex, newStatus) => {\r\n    dispatch(updateOrderStatus(orderId, itemIndex, newStatus))\r\n  }\r\n  //修改成功后 再次派发 实现更新结果\r\n  if (success) {\r\n    dispatch(editOrderById(orderId))\r\n  }\r\n\r\n  const handleReferral = () => {\r\n    // Logic for referral\r\n    console.log('Handle referral')\r\n    // Implement your referral logic here\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : orderDetial ? (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{orderDetial.user.name}</Card.Title>\r\n                <Card.Text>\r\n                  {orderDetial.user.email}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  {orderDetial.illnessDescription}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Status: {orderDetial.orderItems[0].status}\r\n                </Card.Text>\r\n                <Button variant=\"success\" onClick={() => updateStatus(0, 'Completed')}>Completed</Button>\r\n                <Button variant=\"danger\" onClick={() => updateStatus(0, 'Cancelled')}>Cancelled</Button>\r\n                <Button variant=\"warning\" onClick={handleReferral}>Refer</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <Message variant='info'>Order not found</Message>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditOrderScreen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}