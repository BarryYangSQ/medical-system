{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_ORDERS_FAIL, FETCH_ORDERS_REQUEST, FETCH_ORDERS_SUCCESS, STAFF_DETAILS_FAIL, STAFF_DETAILS_REQUEST, STAFF_DETAILS_SUCCESS, STAFF_LIST_FAIL, STAFF_LIST_REQUEST, STAFF_LIST_SUCCESS } from '../contents/staffContents';\n\n//获取所有医生的action\nexport const listStaffs = () => async dispatch => {\n  try {\n    dispatch({\n      type: STAFF_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/staffs');\n    dispatch({\n      type: STAFF_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STAFF_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//获取单个医生的action\nexport const listStaffDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: STAFF_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/staffs/${id}`);\n    dispatch({\n      type: STAFF_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STAFF_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//获取医生对应的order\nexport const fetchOrdersByStaffId = staffId => async dispatch => {\n  dispatch({\n    type: FETCH_ORDERS_REQUEST\n  });\n  try {\n    const response = await fetch(`/api/staffs/${staffId}/orders`);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Something went wrong');\n    }\n    dispatch({\n      type: FETCH_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_ORDERS_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_ORDERS_FAIL","FETCH_ORDERS_REQUEST","FETCH_ORDERS_SUCCESS","STAFF_DETAILS_FAIL","STAFF_DETAILS_REQUEST","STAFF_DETAILS_SUCCESS","STAFF_LIST_FAIL","STAFF_LIST_REQUEST","STAFF_LIST_SUCCESS","listStaffs","dispatch","type","data","get","payload","error","response","message","listStaffDetails","id","fetchOrdersByStaffId","staffId","fetch","json","ok","Error"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/actions/staffAction.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  FETCH_ORDERS_FAIL,\r\n  FETCH_ORDERS_REQUEST,\r\n  FETCH_ORDERS_SUCCESS,\r\n  STAFF_DETAILS_FAIL,\r\n  STAFF_DETAILS_REQUEST,\r\n  STAFF_DETAILS_SUCCESS,\r\n  STAFF_LIST_FAIL,\r\n  STAFF_LIST_REQUEST,\r\n  STAFF_LIST_SUCCESS\r\n} from '../contents/staffContents'\r\n\r\n//获取所有医生的action\r\nexport const listStaffs = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: STAFF_LIST_REQUEST })\r\n    const { data } = await axios.get('/api/staffs')\r\n\r\n    dispatch({ type: STAFF_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: STAFF_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//获取单个医生的action\r\nexport const listStaffDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: STAFF_DETAILS_REQUEST })\r\n    const { data } = await axios.get(`/api/staffs/${id}`)\r\n\r\n    dispatch({ type: STAFF_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: STAFF_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//获取医生对应的order\r\nexport const fetchOrdersByStaffId = (staffId) => async (dispatch) => {\r\n  dispatch({ type: FETCH_ORDERS_REQUEST })\r\n  try {\r\n    const response = await fetch(`/api/staffs/${staffId}/orders`)\r\n    const data = await response.json()\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Something went wrong')\r\n    }\r\n    dispatch({ type: FETCH_ORDERS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_ORDERS_FAIL, payload: error.message })\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,QACb,2BAA2B;;AAElC;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAmB,CAAC,CAAC;IACtC,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,aAAa,CAAC;IAE/CH,QAAQ,CAAC;MAAEC,IAAI,EAAEH,kBAAkB;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEL,eAAe;MACrBQ,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAsB,CAAC,CAAC;IACzC,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,eAAcM,EAAG,EAAC,CAAC;IAErDT,QAAQ,CAAC;MAAEC,IAAI,EAAEN,qBAAqB;MAAES,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,kBAAkB;MACxBW,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAGD;AACA,OAAO,MAAMG,oBAAoB,GAAIC,OAAO,IAAK,MAAOX,QAAQ,IAAK;EACnEA,QAAQ,CAAC;IAAEC,IAAI,EAAEV;EAAqB,CAAC,CAAC;EACxC,IAAI;IACF,MAAMe,QAAQ,GAAG,MAAMM,KAAK,CAAE,eAAcD,OAAQ,SAAQ,CAAC;IAC7D,MAAMT,IAAI,GAAG,MAAMI,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACb,IAAI,CAACK,OAAO,IAAI,sBAAsB,CAAC;IACzD;IACAP,QAAQ,CAAC;MAAEC,IAAI,EAAET,oBAAoB;MAAEY,OAAO,EAAEF;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MAAEC,IAAI,EAAEX,iBAAiB;MAAEc,OAAO,EAAEC,KAAK,CAACE;IAAQ,CAAC,CAAC;EAC/D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}