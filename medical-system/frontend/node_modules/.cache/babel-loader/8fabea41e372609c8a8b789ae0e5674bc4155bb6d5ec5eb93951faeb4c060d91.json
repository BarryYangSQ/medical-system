{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDeatilsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userDelete: userDeleteReducer,\n  userList: userListReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  userUpdate: userUpdateReducer\n});\n\n//获取本地存储的购物车信息\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\n//获取本地存储的登录用户信息\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\n//获取本地存储的用户收货地址信息\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\n//初始化state值\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","productDeatilsReducer","cart","userLogin","userRegister","userDetails","userDelete","userList","userUpdateProfile","orderCreate","orderDetails","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n\r\n} from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers'\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDeatilsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userDelete: userDeleteReducer,\r\n  userList: userListReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  userUpdate: userUpdateReducer,\r\n})\r\n\r\n\r\n//获取本地存储的购物车信息\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n//获取本地存储的登录用户信息\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n//获取本地存储的用户收货地址信息\r\nconst shippingAddressStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n\r\n//初始化state值\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,kBAAkB,QACb,4BAA4B;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,EACxBC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,QAEZ,yBAAyB;AAChC,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,0BAA0B;AAClF,MAAMC,OAAO,GAAGf,eAAe,CAAC;EAC9BgB,WAAW,EAAEZ,kBAAkB;EAC/Ba,cAAc,EAAEC,qBAAqB;EACrCC,IAAI,EAAEd,WAAW;EACjBe,SAAS,EAAEd,gBAAgB;EAC3Be,YAAY,EAAEd,mBAAmB;EACjCe,WAAW,EAAEd,kBAAkB;EAC/Be,UAAU,EAAEZ,iBAAiB;EAC7Ba,QAAQ,EAAEd,eAAe;EACzBe,iBAAiB,EAAEhB,wBAAwB;EAC3CiB,WAAW,EAAEb,kBAAkB;EAC/Bc,YAAY,EAAEb,mBAAmB;EACjCc,UAAU,EAAEhB;AACd,CAAC,CAAC;;AAGF;AACA,MAAMiB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;;AAEN;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMI,sBAAsB,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAClEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;;AAGN;AACA,MAAMK,YAAY,GAAG;EACnBjB,IAAI,EAAE;IACJkB,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDf,SAAS,EAAE;IAAEmB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACtC,KAAK,CAAC;AAE1B,MAAMuC,KAAK,GAAG1C,WAAW,CACvBgB,OAAO,EACPqB,YAAY,EACZjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}