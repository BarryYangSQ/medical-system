{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaOrderListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchOrdersByStaffId } from '../actions/staffAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaOrderListScreen = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const staffOrders = useSelector(state => state.staffOrders);\n  const {\n    loading,\n    error,\n    orders\n  } = staffOrders;\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchOrdersByStaffId(id));\n    }\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Staff Orders for \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order ID: \", order._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(order.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(StaOrderListScreen, \"KXimIeQJMz4BQXB1NdTlZMauEjE=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = StaOrderListScreen;\nexport default StaOrderListScreen;\nvar _c;\n$RefreshReg$(_c, \"StaOrderListScreen\");","map":{"version":3,"names":["React","useEffect","useParams","useSelector","useDispatch","fetchOrdersByStaffId","jsxDEV","_jsxDEV","StaOrderListScreen","_s","id","dispatch","staffOrders","state","loading","error","orders","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","_id","Date","date","toLocaleDateString","status","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaOrderListScreen.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchOrdersByStaffId } from '../actions/staffAction'\r\n\r\nconst StaOrderListScreen = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const staffOrders = useSelector(state => state.staffOrders)\r\n  const { loading, error, orders } = staffOrders\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchOrdersByStaffId(id))\r\n    }\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Staff Orders for {id}</h1>\r\n      {loading ? <p>Loading...</p> : error ? <p>Error: {error}</p> : (\r\n        <ul>\r\n          {orders.map(order => (\r\n            <li key={order._id}>\r\n              <p>Order ID: {order._id}</p>\r\n              <p>Date: {new Date(order.date).toLocaleDateString()}</p>\r\n              <p>Status: {order.status}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StaOrderListScreen\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,WAAW,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,WAAW,CAAC;EAC3D,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGJ,WAAW;EAE9CX,SAAS,CAAC,MAAM;IACd,IAAIS,EAAE,EAAE;MACNC,QAAQ,CAACN,oBAAoB,CAACK,EAAE,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,CAACC,QAAQ,EAAED,EAAE,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,mBAAiB,EAACP,EAAE;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7BP,OAAO,gBAAGP,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAGN,KAAK,gBAAGR,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAC1Dd,OAAA;MAAAU,QAAA,EACGD,MAAM,CAACM,GAAG,CAACC,KAAK,iBACfhB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,GAAG,YAAU,EAACM,KAAK,CAACC,GAAG;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5Bd,OAAA;UAAAU,QAAA,GAAG,QAAM,EAAC,IAAIQ,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxDd,OAAA;UAAAU,QAAA,GAAG,UAAQ,EAACM,KAAK,CAACK,MAAM;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHtBE,KAAK,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAZ,EAAA,CA5BKD,kBAAkB;EAAA,QACPN,SAAS,EACPE,WAAW,EACRD,WAAW;AAAA;AAAA0B,EAAA,GAH3BrB,kBAAkB;AA8BxB,eAAeA,kBAAkB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}