{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u4E91\\u6797\\\\Desktop\\\\health\\\\health-project\\\\frontend\\\\src\\\\screens\\\\StaffScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport { listStaffDetails } from '../actions/staffAction';\n\n// ... other imports\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StaffScreen = () => {\n  _s();\n  var _availableTimes$find;\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState('');\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const staffDetails = useSelector(state => state.staffDetails);\n  const {\n    loading,\n    error,\n    staff\n  } = staffDetails;\n  useEffect(() => {\n    dispatch(listStaffDetails(id));\n  }, [dispatch, id]);\n  useEffect(() => {\n    if (staff && staff.availableTimes) {\n      setAvailableTimes(staff.availableTimes.map(time => ({\n        date: time.date.slice(0, 10),\n        slots: time.slots\n      })));\n    }\n  }, [staff]);\n  const selectDate = date => {\n    setSelectedDate(date);\n    setSelectedSlot(''); // Reset slot when a new date is selected\n  };\n  const selectSlot = slot => {\n    setSelectedSlot(slot);\n  };\n  const addToAppointmentHandler = () => {\n    // Logic to handle adding the selected date and slot to the appointment\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"\\u8FD4\\u56DE\\u4E3B\\u9875\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Available Dates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 6,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: selectedDate === time.date ? 'success' : 'outline-primary',\n                    onClick: () => selectDate(time.date),\n                    children: time.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Available Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: selectedDate && ((_availableTimes$find = availableTimes.find(time => time.date === selectedDate)) === null || _availableTimes$find === void 0 ? void 0 : _availableTimes$find.slots.map((slot, index) => /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: selectedSlot === slot ? 'success' : 'outline-secondary',\n                    onClick: () => selectSlot(slot),\n                    disabled: !selectedDate,\n                    children: slot\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToAppointmentHandler,\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: !selectedSlot,\n                children: \"\\u6DFB\\u52A0\\u5230\\u9884\\u7EA6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(StaffScreen, \"SmFNrrZuc+bZt2UCwtuFZIojpsQ=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = StaffScreen;\nexport default StaffScreen;\nvar _c;\n$RefreshReg$(_c, \"StaffScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","useParams","Row","Col","Image","ListGroup","Card","Button","listStaffDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","StaffScreen","_s","_availableTimes$find","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","dispatch","id","staffDetails","state","loading","error","staff","map","time","date","slice","slots","selectDate","selectSlot","slot","addToAppointmentHandler","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","Loader","Message","variant","md","Item","index","xs","onClick","find","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/陈云林/Desktop/health/health-project/frontend/src/screens/StaffScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport { listStaffDetails } from '../actions/staffAction'\r\n\r\n// ... other imports\r\n\r\nconst StaffScreen = () => {\r\n  const [availableTimes, setAvailableTimes] = useState([])\r\n  const [selectedDate, setSelectedDate] = useState('')\r\n  const [selectedSlot, setSelectedSlot] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const staffDetails = useSelector((state) => state.staffDetails)\r\n  const { loading, error, staff } = staffDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listStaffDetails(id))\r\n  }, [dispatch, id])\r\n\r\n  useEffect(() => {\r\n    if (staff && staff.availableTimes) {\r\n      setAvailableTimes(staff.availableTimes.map((time) => ({\r\n        date: time.date.slice(0, 10),\r\n        slots: time.slots,\r\n      })))\r\n    }\r\n  }, [staff])\r\n\r\n  const selectDate = (date) => {\r\n    setSelectedDate(date)\r\n    setSelectedSlot('') // Reset slot when a new date is selected\r\n  }\r\n\r\n  const selectSlot = (slot) => {\r\n    setSelectedSlot(slot)\r\n  }\r\n\r\n  const addToAppointmentHandler = () => {\r\n    // Logic to handle adding the selected date and slot to the appointment\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-dark my-3' to='/'>返回主页</Link>\r\n      {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Row>\r\n          {/* ... Staff details code ... */}\r\n          <Col md={6}>\r\n            {/* ... */}\r\n          </Col>\r\n          <Col md={3}>\r\n            {/* ... */}\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                {/* ... */}\r\n                <ListGroup.Item>\r\n                  <h4>Available Dates</h4>\r\n                  <Row>\r\n                    {availableTimes.map((time, index) => (\r\n                      <Col key={index} xs={6} md={4}>\r\n                        <Button variant={selectedDate === time.date ? 'success' : 'outline-primary'}\r\n                          onClick={() => selectDate(time.date)}>\r\n                          {time.date}\r\n                        </Button>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h4>Available Slots</h4>\r\n                  <Row>\r\n                    {selectedDate && availableTimes.find(time => time.date === selectedDate)?.slots.map((slot, index) => (\r\n                      <Col key={index} xs={6}>\r\n                        <Button variant={selectedSlot === slot ? 'success' : 'outline-secondary'}\r\n                          onClick={() => selectSlot(slot)}\r\n                          disabled={!selectedDate}>\r\n                          {slot}\r\n                        </Button>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Button onClick={addToAppointmentHandler}\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={!selectedSlot}>\r\n                    添加到预约\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StaffScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}